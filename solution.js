// Find the n’th term in Look-and-say (Or Count and Say) Sequence. The look-and-say sequence is the sequence of the below integers: 1, 11, 21, 1211, 111221, 312211, 13112221, 1113213211, …

// The first term is "1" Second term is "11", generated by reading first term as "One 1" (There is one 1 in previous term) Third term is "21", generated by reading second term as "Two 1" Fourth term is "1211", generated by reading third term as "One 2 One 1" and so on

// How to find n’th term?

// Example:

// Input: n = 3 Output: 21 Input: n = 5 Output: 111221

const fn = (n) => {
  if (n === 1) return "1";

  let term = "1";
  for (let i = 2; i <= n; i++) {
    let count = 1;
    let tmp = "";

    for (let j = 0; j < term.length; j++) {
      if (term[j] === term[j + 1]) {
        count++;
      } else {
        tmp += `${count}${term[j]}`;
        count = 1;
      }
    }
    term = tmp;
  }
  return term;
};

fn(3);
fn(4);
fn(5);
fn(6);
fn(7);
